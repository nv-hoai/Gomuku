// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharedLib.Database;

#nullable disable

namespace SharedLib.Migrations
{
    [DbContext(typeof(GomokuDbContext))]
    [Migration("20251021044714_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SharedLib.Database.Models.GameHistory", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAIGame")
                        .HasColumnType("bit");

                    b.Property<Guid>("Player1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Player1Symbol")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid?>("Player2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Player2Symbol")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Winner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player2Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("StartTime");

                    b.ToTable("GameHistories");
                });

            modelBuilder.Entity("SharedLib.Database.Models.PlayerProfile", b =>
                {
                    b.Property<Guid>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Draws")
                        .HasColumnType("int");

                    b.Property<int>("EloRating")
                        .HasColumnType("int");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<int>("PlayerLevel")
                        .HasColumnType("int");

                    b.Property<string>("PreferredSymbol")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("TotalGamesPlayed")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("ProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PlayerProfiles");

                    b.HasData(
                        new
                        {
                            ProfileId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Bio = "System Administrator",
                            DisplayName = "Administrator",
                            Draws = 0,
                            EloRating = 2000,
                            Losses = 0,
                            PlayerLevel = 99,
                            TotalGamesPlayed = 0,
                            UpdatedAt = new DateTime(2025, 10, 21, 4, 47, 12, 818, DateTimeKind.Utc).AddTicks(8788),
                            UserId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Wins = 0
                        });
                });

            modelBuilder.Entity("SharedLib.Database.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedAt = new DateTime(2025, 10, 21, 4, 47, 12, 818, DateTimeKind.Utc).AddTicks(8761),
                            PasswordHash = "$2a$11$zlILsr8JDbaT3y5G6CyKdefDGx8WN5gD8dwLfztXD6y75fMqIu.LW",
                            Salt = "70b1c7e5-5b6f-48f7-a9d4-76a6b9c34e68",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("SharedLib.Database.Models.GameHistory", b =>
                {
                    b.HasOne("SharedLib.Database.Models.User", "Player1")
                        .WithMany("GamesAsPlayer1")
                        .HasForeignKey("Player1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SharedLib.Database.Models.User", "Player2")
                        .WithMany("GamesAsPlayer2")
                        .HasForeignKey("Player2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Player1");

                    b.Navigation("Player2");
                });

            modelBuilder.Entity("SharedLib.Database.Models.PlayerProfile", b =>
                {
                    b.HasOne("SharedLib.Database.Models.User", "User")
                        .WithOne("PlayerProfile")
                        .HasForeignKey("SharedLib.Database.Models.PlayerProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedLib.Database.Models.User", b =>
                {
                    b.Navigation("GamesAsPlayer1");

                    b.Navigation("GamesAsPlayer2");

                    b.Navigation("PlayerProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
